#!/bin/bash

#Initialise the EXTENSION of the files to be spa (can be changed in case the old format is used)
EXTENSIONS=""
SPC=""
wdir="/mnt/nas2/raw_sequence_data/ftir/working_dir"
# Parse the arguments
# I'm changing this since the old argument grabber wasn't working
# and this is easier than debugging it.
while getopts 'f:e:ch' flag; do
	case $flag in
		f)
		    FILEPATH=$OPTARG
		    ;;
		e)
		    EXTENSIONS="$EXTENSIONS $OPTARG"
		    ;;
		c)
		    CLASSIC="-c "
		    ;;
		h)
		    help=1
	esac
done

if [ -n "$help" ]; then
	echo "Usage: $0 -f path_to_ftir_files"
	echo "Optional: add -c to do the classic renaming instead of the newer default"
	echo "Optional: add -h to print this help statement instead of renaming anything"
	echo "Optional: add -e to specify a file extension. Default is .spa"
	echo "The -e option may be used multiple times to change file names for more than one extension"
	exit
fi

# if no extensions were provided, use spa
if [ -z "${EXTENSIONS}" ]; then
	EXTENSIONS=" spa"
fi

# Check to see if the filepath argument was provided
if [ -z "${FILEPATH}" ]
then
      echo Please provide the path to the FTIR files on your USB key e.g. "${HOME}"/LANG/FTIR
      exit
else
      # Ensure that the filepath is valid
      PARENTDIR="$(dirname "${FILEPATH}")"
      if [ ! -d "${FILEPATH}" ] 
      then
          echo "Directory "${FILEPATH}" DOES NOT exist!" 
          exit
      # Check to see if the required .XLSX file is present
      else
          if [ -f "${FILEPATH}"/FTIR.XLSX ]; then
		EXCELFILE="${FILEPATH}"/FTIR.XLSX 
		
          elif [ -f "${PARENTDIR}"/FTIR.XLSX ]; then
		EXCELFILE="${PARENTDIR}"/FTIR.XLSX
	  else
              echo "Cannot locate FTIR.XLSX file in "${FILEPATH}" or "${PARENTDIR}"!" 
              exit
          fi
          # Check to see if .spa/.spc files are present in the supplied path
	  for EXTENSION in $EXTENSIONS; do
		  SPCFILES="$SPCFILES $(ls "${FILEPATH}"/*."${EXTENSION}")"
          done
          if [ -z "${SPCFILES/ }" ]
          then
		  echo "Cannot locate .$(echo $EXTENSIONS | sed 's/\s/ or ./g') files in "${FILEPATH}"!" 
              exit
          else
              echo "Using FTIR file path: "${FILEPATH}""
	      echo "Using Excel file: "${EXCELFILE}"" 
          fi
      fi
fi

# Copy Files USB to /mnt/nas2/raw_sequence_data/ftir
echo "Copying files from USB to $wdir/"
# Make the working directory on the NAS (if necessary)
mkdir -p $wdir
for EXTENSION in $EXTENSIONS; do
    cp -r "${FILEPATH}"/*."${EXTENSION}" $wdir
done
cp -r "${EXCELFILE}" $wdir
sleep 10

# Run Renamer
echo "Running renamer.py"
#hacky way of checking path
python $(echo $0 | sed 's/ftir_rename$//')renamer.py -p $wdir -f $wdir/FTIR.XLSX -o $wdir/renamedfiles "${CLASSIC}"-e"${EXTENSIONS}"
sleep 5

# Compress Files
echo "Compressing files"
for EXTENSION in $EXTENSIONS; do
	renamedfiles="$renamedfiles $(ls $wdir/renamedfiles/*.${EXTENSION})"
	rawfiles="$rawfiles $(ls $wdir/*.${EXTENSION})"
done

echo $rawfiles
zip -j $wdir/renamedfiles/FTIR.zip $renamedfiles
sleep 5

# Move Zip to USB
echo "Moving archive to USB"
mv $wdir/renamedfiles/FTIR.zip "${FILEPATH}"
sleep 2

# Move raw files from working_dir to raw_files
echo "Moving raw files to storage"
mv $rawfiles /mnt/nas2/raw_sequence_data/ftir/raw_files/

# Move renamed files from working_dir/renamed to renamedfiles
echo "Moving renamed files to storage"
mv $renamedfiles /mnt/nas2/raw_sequence_data/ftir/renamedfiles/

# Delete Old FTIR
echo "Removing FTIR.XLSX from NAS"
rm $wdir/FTIR.XLSX

# Delete original files from USB
echo "Removing original files from USB"
for EXTENSION in $EXTENSIONS; do
    rm "${FILEPATH}"/*."${EXTENSION}"
done

echo "Complete!"
